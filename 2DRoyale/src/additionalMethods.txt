/**
	 * Not normally used. Used when changes are made to the map to generate a new graphic for the megamap. Place and call in Screen.java.
	 */
	private void renderMegamapObsolete(Graphics2D g2) {

		int megamapLength = 640; // must be multiple of 128 (map size)
		int megamapHeight = 640;
		int megamapRenderAtX = game.player.screenX - megamapLength / 2;
		int megamapRenderAtY = game.player.screenY - megamapHeight / 2;
		int megamapTileSizeX = megamapLength / game.maxWorldCol;
		int megamapTileSizeY = megamapHeight / game.maxWorldRow;
		int playerSize = 8;

		int playerMapX = (int) Math.round((double) game.player.worldX / game.worldWidth * megamapLength);
		int playerMapY = (int) Math.round((double) game.player.worldY / game.worldHeight * megamapHeight);

		int megamapX = 0;
		int megamapY = 0;

		// Render blocks
		for (int y = 0; y < game.maxWorldRow; y++) {
			megamapX = 0;
			for (int x = 0; x < game.maxWorldCol; x++) {

				if (game.tileM.mapTileNum[x][y].isFlipped)
					g2.drawImage(game.tileM.mapTileNum[x][y].tile.image, megamapRenderAtX + megamapX, megamapRenderAtY + megamapY, megamapTileSizeX, megamapTileSizeY, null);
				else
					g2.drawImage(game.tileM.mapTileNum[x][y].tile.image, megamapRenderAtX + megamapX + megamapTileSizeX, megamapRenderAtY + megamapY, -megamapTileSizeX,
							megamapTileSizeY, null);
				megamapX += megamapTileSizeX;
			}
			megamapY += megamapTileSizeY;
		}

		megamapX = 0;
		megamapY = 0;
		// Render buildings
		for (int y = 0; y < game.maxWorldRow; y++) {
			megamapX = 0;
			for (int x = 0; x < game.maxWorldCol; x++) {
				if (game.structM.buildingOccupiesTile[x][y])
					g2.drawImage(game.tileM.tile[6].image, megamapRenderAtX + megamapX, megamapRenderAtY + megamapY, megamapTileSizeX, megamapTileSizeY, null);
				megamapX += megamapTileSizeX;
			}
			megamapY += megamapTileSizeY;
		}

		megamapX = 0;
		megamapY = 0;
		// Draw gas
		for (int y = 0; y < game.maxWorldRow; y++) {
			megamapX = 0;
			for (int x = 0; x < game.maxWorldCol; x++) {

				if (game.tileM.mapTileNum[x][y].isGassed)
					g2.drawImage(game.tileM.gasTile.image, megamapRenderAtX + megamapX, megamapRenderAtY + megamapY, megamapTileSizeX, megamapTileSizeY, null);

				megamapX += megamapTileSizeX;
			}
			megamapY += megamapTileSizeY;
		}

		// Draw player sprite (decent quality)
		g2.drawImage(game.player.sprite, megamapRenderAtX + playerMapX - (playerSize / 2), megamapRenderAtY + playerMapY - (playerSize / 2), playerSize, playerSize, null);

	}
